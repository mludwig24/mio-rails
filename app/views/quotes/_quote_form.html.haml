%div{"ng-show" => "false", "id" => "ng-prepopulate"}
	- @quote.toweds.each_index do |c|
		%div{"data-name" => "towed_unit_#{c+1}_type_id",
			"data-value" => @quote.toweds[c].type_id}
		%div{"data-name" => "towed_unit_#{c+1}_year",
			"data-value" => @quote.toweds[c].year}
		%div{"data-name" => "towed_unit_#{c+1}_value",
			"data-value" => @quote.toweds[c].value}
		%div{"data-name" => "towed_unit_#{c+1}_id",
			"data-value" => @quote.toweds[c].id}
		- @quote.toweds[c].errors.keys.each do |key|
			%div{:id => "error_towed_unit_#{c+1}_#{key}"}
				= @quote.toweds[c].errors.get(key).join(", ")

= bootstrap_form_for(@quote, layout: :horizontal, label_col: "col-sm-5", control_col: "col-sm-7", html: { "ng-controller" => "MakeModelController" }) do |f|
	= f.alert_message t('global.error_alert', count: @quote.errors.count)
	%h3
		= t('quote.form.header.travel_dates')
	= render "date_range", form: f, quote: @quote, low_date: :enter_date, high_date: :leave_date
	%h3
		= t('quote.form.header.vehicle_information')
	= f.select :vehicle_type, [], {:include_blank => t('general.forms.select_one')},
		"ng-options" => "vt.label for vt in vehicle_types track by vt.id",
		"ng-model" => "vehicle_type",
		"ng-change" => "updateVehicleType()",
		"data-default" => "#{@quote.vehicle_type.to_i > 0 ? @quote.vehicle_type : -1}"
	%div{"ng-hide" => "dl_quote"}
		= f.select :year, options_for_select(@quote.valid_years.sort.reverse, @quote.year),
			{:include_blank => t('general.forms.select_one')}
		= f.select :make_id, [], {:include_blank => t('general.forms.select_one')},
			"ng-options" => "make.label for make in makes track by make.id",
			"ng-model" => "make",
			"ng-disabled" => "makes.length == 0",
			"ng-change" => "updateMake()",
			"data-default" => "#{@quote.make_id.to_i > 0 ? @quote.make_id : -1}"
		= f.hidden_field :make_label, 
			"ng-value" => "make.label"
		= f.static_control_div :model_id, label: t('activerecord.attributes.quote.model_id') do
			= select :quote, :model_id, [], {:include_blank => t('general.forms.select_one')},
				"ng-options" => "model.label for model in models track by model.id",
				"ng-model" => "model",
				"ng-change" => "update()",
				"ng-show" => "has_models",
				"ng-disabled" => "models.length == 0",
				:class => "form-control",
				"data-default" => "#{@quote.model_id.to_i > 0 ? @quote.model_id : -1}"
			= text_field_tag "quote[other_model]", @quote.other_model,
				:placeholder => t('quote.form.other_model_placeholder'),
				"ng-hide" => "has_models",
				:class => "form-control"
		= f.hidden_field :model_label, 
			"ng-value" => "model.label"
		= f.select :value, [[t('quote.form.vehicle_value.liability_only'), 0],] + @quote.valid_values[1..-1].collect { |v| [number_to_currency(v), v] },
			{:include_blank => t('general.forms.select_one')}
	%h3
		= t('quote.form.header.towed_units')
	= f.select :towing, (0..10).to_a.collect { |i| [t('quote.form.towing_anything_value_label', :count => i), i]}, {},
		"ng-model" => "towed_units",
		"ng-init" => "towed_units = #{@quote.towing ? @quote.towing : 0}"
	%div{"ng-hide" => "dl_quote"}
		%div{"ng-show" => "towed_units > 0"}
			%hr
			%h4
				= t('quote.disclosure.towed_units_disclosure_header')
			%p
				= t('quote.disclosure.towed_units_disclosure')
			%hr
		%div{"ng-repeat" => "i in towed_units | range:towed_units"}
			%h4
				{{ "#{ t('quote.form.header.towed_unit_sub') }" | format : $index + 1 }}
			%input{"type" => "hidden",
				"name" => 'quote[toweds_attributes][{{$index}}][id]', 
				"ng-value" => '$parent["towed_unit_"+i+"_id"]'}
			%input{"type" => "hidden",
				"name" => 'quote[toweds_attributes][{{$index}}][type_label]', 
				"ng-value" => 'getTUType($parent["towed_unit_"+i+"_type_id"])'}
			%div{"ng-class" => "{'has-error': hasError('#error_towed_unit_' + ($index+1) + '_type_id')}"}
				= f.static_control :towed_unit_type, "label" => t('activerecord.attributes.quote.towed_unit_type') do
					%select{"name" => "quote[toweds_attributes][{{$index}}][type_id]", 
							:class => "form-control",
							"ng-model" => '$parent["towed_unit_"+i+"_type_id"]'}
						%option{"value" => ""}
							= t('general.forms.select_one')
						%option{"ng-repeat" => "tut in towed_unit_types",
							"value" => "{{tut.id}}",
							"ng-selected" => 'tut.id == $parent["towed_unit_"+i+"_type_id"]'}
							{{tut.en}}
					%span{:class => "help-block",
						"ng-show" => "hasError('#error_towed_unit_' + ($index+1) + '_type_id')",
						"ng-bind" => "getError('#error_towed_unit_' + ($index+1) + '_type_id')"}
			%div{"ng-class" => "{'has-error': hasError('#error_towed_unit_' + ($index+1) + '_year')}"}
				= f.static_control :towed_unit_year, label: t('activerecord.attributes.quote.towed_unit_year') do
					= select nil, "quote[toweds_attributes][{{$index}}][year]",
						options_for_select(@quote.valid_years.sort.reverse),
						{:include_blank => t('general.forms.select_one')},
						:class => "form-control",
						"ng-model" => '$parent["towed_unit_"+i+"_year"]'
					%span{:class => "help-block",
						"ng-show" => "hasError('#error_towed_unit_' + ($index+1) + '_year')",
						"ng-bind" => "getError('#error_towed_unit_' + ($index+1) + '_year')"}
			%div{"ng-class" => "{'has-error': hasError('#error_towed_unit_' + ($index+1) + '_value')}"}
				= f.static_control :towed_unit_value, label: t('activerecord.attributes.quote.towed_unit_value') do
					= select nil, "quote[toweds_attributes][{{$index}}][value]", 
						[[t('quote.form.vehicle_value.liability_only'), 0],] + @quote.valid_values[1..-1].collect { |v| [number_to_currency(v), v] },
						{:include_blank => t('general.forms.select_one')},
						:class => "form-control",
						"ng-model" => '$parent["towed_unit_"+i+"_value"]'
					%span{:class => "help-block",
						"ng-show" => "hasError('#error_towed_unit_' + ($index+1) + '_value')",
						"ng-bind" => "getError('#error_towed_unit_' + ($index+1) + '_value')"}
	%h3
		= t('quote.form.header.coverage_information')
	= f.select :liability_limit, @quote.valid_liability_limits.collect { |v| [number_to_currency(v), v] }, {:default => @quote.liability_limit }

	= render("yes_no", :form => f, :field => :fixed_deductibles,
		:label => t('activerecord.attributes.quote.fixed_deductibles'))
	%h3
		= t('quote.form.header.underwriting_information')
	= f.select :days_veh_in_mexico, options_for_select(@quote.valid_days_veh_in_mexico.collect { |i| [t("activerecord.attributes.quote.days_veh_in_mexico_options.#{i}"), i]}, @quote.days_veh_in_mexico),
		{:include_blank => t('general.forms.select_one')}
	= f.select :visit_reason, options_for_select(@quote.valid_visit_reasons.collect { |i| [t("activerecord.attributes.quote.visit_reasons.#{i}"), i]}, @quote.visit_reason),
		{:include_blank => t('general.forms.select_one')}
	= render("yes_no", :form => f, :field => :beyond_freezone,
		:label => t('activerecord.attributes.quote.beyond_freezone'))
	= render("yes_no", :form => f, :field => :under21,
		:label => t('activerecord.attributes.quote.under21'))
	= render("yes_no", :form => f, :field => :uscoll_sc,
		:label => t('activerecord.attributes.quote.uscoll_sc'))
	%hr
	= render("submit_with_help", :form => f, :label => t('quote.form.button.get_quote'))